############################### NEW ################################
name: Relis

on:
  push:
    branches:
      - main

jobs:
  relis_unit_testing:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Check if Docker is installed
        run: |
          if docker --version; then
            echo "Docker is installed in your repository."
          else
            echo "Docker is not installed, please install Docker in your Github Repository."
          fi

      - name: Run Unit test
        run: |
          echo $GITHUB_SHA > successful_commit.txt
          #git config --global user.email "christ.malak@gmail.com"
          #git config --global user.name "Your Name"
          git add successful_commit.txt
          git commit -m $GITHUB_SHA
          git push origin main

        # env:
        #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      # - name: Build Docker Image
      #   run: docker-compose build
      #   working-directory: relis_deployment

      # - name: Run Docker Containers
      #   run: docker-compose up -d
      #   working-directory: relis_deployment

      # - name: Wait for Application to Start
      #   run: sleep 10

      # - name: Set relis-app Container permission
      #   run: |
      #     docker exec relis-app chmod -R 777 /u/relis/public_html/relis_app/

      # - name: Run Unit test
      #   run: |
      #     response=$(php -r " echo file_get_contents('http://localhost:8083/test/unit_test/relis_unit_test/last_result');")
      #     echo $response
    
      #     if [ "$response" == "successful" ]; then
      #       echo "The unit test passed. Proceeding with the workflow."
      #       echo $GITHUB_SHA > successful_commit.txt

      #     elif [ "$response" == "failed" ]; then
      #       echo "The unit test failed. Reverting to the last successful commit."

      #       # Retrieve the commit hash from the file
      #       last_successful_commit=$(cat successful_commit.txt)

      #       # Reset the branch to the last successful commit
      #       git reset --hard $last_successful_commit

      #       # Force push to update the branch on the remote repository
      #       git push --force

      #       exit 1

      #     else
      #       echo "The unit test has an error"
      #       exit 1
      #     fi

      # - name: Stop all running Docker Containers
      #   run: docker stop $(docker ps -q)
