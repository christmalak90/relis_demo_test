############################### NEW ################################
name: Relis

on: 
  push:
    branches:
      - main
permissions:
  contents: write

jobs:
  relis_unit_testing:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Check if Docker is installed
        run: |
          if docker --version; then
            echo "Docker is installed in your repository."
          else
            echo "Docker is not installed, please install Docker in your Github Repository."
          fi

      - name: Run Unit test
        run: |
          # echo success
          # echo $GITHUB_SHA > successful_commit.txt
          # git config user.email $GITHUB_ACTOR
          # git config user.name $GITHUB_ACTOR
          # git add -f successful_commit.txt
          # git commit -m $GITHUB_SHA
          # git push origin main

          echo fail
          git config user.email $GITHUB_ACTOR
          git config user.name $GITHUB_ACTOR
          # Retrieve the commit hash from the file
          last_successful_commit=$(cat successful_commit.txt)
          
          # Reset the branch to the last successful commit
          #git clone https://github.com/$GITHUB_ACTOR/relis_demo_test.git
          git reset --hard HEAD~1

          # git revert -n $last_successful_commit
          # git commit -m "Revert"

          # Force push to update the branch on the remote repository
          git push --force
          # git push origin main

          # # echo $GITHUB_SHA > successful_commit.txt
          # # git config user.email $GITHUB_ACTOR
          # # git config user.name $GITHUB_ACTOR
          # # git add -f successful_commit.txt
          # # git commit -m $GITHUB_SHA
          # # git push origin main

          # echo ############pushTag
          # git push origin last_successful_commit

          # echo ############fetchTag
          # git fetch --tags

          # echo ############showTag
          # git show last_successful_commit
          # 3200e6ab353824bbc3919236ee432b78598afbb3




###
      # - name: Build Docker Image
      #   run: docker-compose build
      #   working-directory: relis_deployment

      # - name: Run Docker Containers
      #   run: docker-compose up -d
      #   working-directory: relis_deployment

      # - name: Wait for Application to Start
      #   run: sleep 10

      # - name: Set relis-app Container permission
      #   run: |
      #     docker exec relis-app chmod -R 777 /u/relis/public_html/relis_app/

      # - name: Run Unit test
      #   run: |
      #     response=$(php -r " echo file_get_contents('http://localhost:8083/test/unit_test/relis_unit_test/last_result');")
      #     echo $response
    
      #     if [ "$response" == "successful" ]; then
      #       echo "The unit test passed. Proceeding with the workflow."
      #       echo $GITHUB_SHA > successful_commit.txt

      #     elif [ "$response" == "failed" ]; then
      #       echo "The unit test failed. Reverting to the last successful commit."

      #       # Retrieve the commit hash from the file
      #       last_successful_commit=$(cat successful_commit.txt)

      #       # Reset the branch to the last successful commit
      #       git reset --hard $last_successful_commit

      #       # Force push to update the branch on the remote repository
      #       git push --force

      #       exit 1

      #     else
      #       echo "The unit test has an error"
      #       exit 1
      #     fi

      # - name: Stop all running Docker Containers
      #   run: docker stop $(docker ps -q)
